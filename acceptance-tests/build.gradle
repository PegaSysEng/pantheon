/*
 * Copyright 2018 ConsenSys AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

dependencies {

  testSupportImplementation 'org.apache.logging.log4j:log4j-core'
  testSupportImplementation 'org.apache.logging.log4j:log4j-slf4j-impl'

  testSupportImplementation project(':config')
  testSupportImplementation project(':consensus:clique')
  testSupportImplementation project(':consensus:ibft')
  testSupportImplementation project(':crypto')
  testSupportImplementation project(':enclave')
  testSupportImplementation project(':ethereum:blockcreation')
  testSupportImplementation project(':ethereum:core')
  testSupportImplementation project(path: ':ethereum:core', configuration: 'testSupportArtifacts')
  testSupportImplementation project(':ethereum:eth')
  testSupportImplementation project(':ethereum:graphql')
  testSupportImplementation project(':ethereum:jsonrpc')
  testSupportImplementation project(':ethereum:p2p')
  testSupportImplementation project(':ethereum:permissioning')
  testSupportImplementation project(':ethereum:rlp')
  testSupportImplementation project(':metrics:core')
  testSupportImplementation project(':pantheon')
  testSupportImplementation project(':plugin-api')
  testSupportImplementation project(':plugins:rocksdb')
  testSupportImplementation project(':services:kvstore')
  testSupportImplementation project(':testutil')
  testSupportImplementation project(':util')

  testSupportImplementation 'com.github.tomakehurst:wiremock-jre8'
  testSupportImplementation 'com.google.guava:guava'
  testSupportImplementation 'com.squareup.okhttp3:okhttp'
  testSupportImplementation 'info.picocli:picocli'
  testSupportImplementation 'io.reactivex.rxjava2:rxjava'
  testSupportImplementation 'io.vertx:vertx-core'
  testSupportImplementation 'junit:junit'
  testSupportImplementation 'net.consensys:orion'
  testSupportImplementation 'org.apache.logging.log4j:log4j-api'
  testSupportImplementation 'org.assertj:assertj-core'
  testSupportImplementation 'org.awaitility:awaitility'
  testSupportImplementation 'org.java-websocket:Java-WebSocket'
  testSupportImplementation 'org.web3j:abi'
  testSupportImplementation 'org.web3j:pantheon'
  testSupportImplementation 'org.web3j:crypto'
  testSupportImplementation 'tech.pegasys.ethsigner.internal:core'
  testSupportImplementation 'tech.pegasys.ethsigner.internal:file-based'
  testSupportImplementation 'tech.pegasys.ethsigner.internal:signing-api'


  testImplementation 'junit:junit'
  testImplementation 'net.consensys:orion'
  testImplementation 'org.assertj:assertj-core'
  testImplementation 'org.web3j:abi'
  testImplementation 'org.web3j:pantheon'
  testImplementation project(':ethereum:jsonrpc')
  testImplementation project(':enclave')
  testImplementation 'org.awaitility:awaitility'
  testImplementation project(':consensus:clique')
  testImplementation project(':ethereum:permissioning')
  testImplementation project(':util')
  testImplementation project(':plugin-api')
  testImplementation project(':pantheon')
  testImplementation project(':ethereum:core')
  testImplementation project(path: ':ethereum:core', configuration: 'testSupportArtifacts')
  testImplementation project(':testutil')
  testImplementation 'tech.pegasys.ethsigner.internal:core'
  testImplementation 'tech.pegasys.ethsigner.internal:file-based'
}

test.enabled = false

sourceSets {
  test { resources {  srcDirs "${rootDir}/pantheon/build/libs" } }
}

processTestResources.dependsOn(':pantheon:testJar')

task acceptanceTest(type: Test) {
  dependsOn(rootProject.installDist)
  systemProperty 'acctests.runPantheonAsProcess', 'true'
  mustRunAfter rootProject.subprojects*.test
  description = 'Runs Pantheon acceptance tests.'
  group = 'verification'
}
